// Dependencies
@import compass
@import ../../breakpoint-slicer/stylesheets/breakpoint-slicer




/////////////////////////////////////////
// Setting up Breakpoint Slicer
/////////////////////////////////////////

$slicer-breakpoints:        0        400px       600px      800px        1050px

//                          └────┬────┘ └────┬────┘ └────┬────┘ └────┬────┘ └────┬────
// Slice numbers:                1           2           3           4           5
$slicer-breakpoint-names:       'xs'        's'         'm'         'l'         'xl'


/////////////////////////////////////////
// Testing the mixins
/////////////////////////////////////////

// A mixin to turn elements black.
=black
  background-color: black
  color: white

.demo
  .at
    +at(3)
      +black

  .from
    +from(3)
      +black

  .to
    +to(3)
      +black

  .between
    +between(2,4)
      +black

.demo-names
  .at
    +at('m')
      +black

  .from
    +from('m')
      +black

  .to
    +to('m')
      +black

  .between
    +between('s','l')
      +black


/////////////////////////////////////////
// Breakpoint Slicer with Singularity
/////////////////////////////////////////

// Importing Singularity.
@import singularitygs

// Configuring Singularity.
$grids: 1
$gutters: 0.2

// Adding responsive grids.
// Cycling through slices.
@for $i from 2 through total-slices()
  // Setting the number of columns in each slice equal to the number of that slice.
  $grids: add-grid($i at bp($i))

// Spanning the columns
#singularity1 .column

  // This text will appear when no media queries are applied.
  span:after
    content: "This column is not spanned."

  // Cycling through slices.
  @for $i from 2 through total-slices()

    // Setting a media query per slice.
    +at($i)

      // Setting the position to be the last-but-one column.
      $position: $i - 1

      // Spanning.
      +grid-span(1, $position)

      // Showing the text.
      span:after
        content: "+at(#{$i})\A  +grid-span(1, #{$position})"

// Enabling the grid background.
.singularity
  +background-grid
  +pie-clearfix
  margin-bottom: 1em


/////////////////////////////////////////
// Thumbnail grid with Singularity
/////////////////////////////////////////

#singularity2 .column
  margin-bottom: 1em

  // Cycling through slices
  @for $slice from 2 through total-slices()

    // Setting a media query for each slice
    +at($slice)

      // Within the media query, cycle through columns
      @for $column from 1 through $slice

        // Span thumbnails in this column
        &:nth-child(#{$slice}n+#{$column})
          +grid-span(1, $column)

          @if $column == 1
            clear: both


/////////////////////////////////////////
// Styling
/////////////////////////////////////////

*
  +box-sizing(border-box)

p
  margin-bottom: 1em

h2
  margin-top: 2em

.demo, .demo-names
  p, .column
    font-family: monospace
    border: 1px solid black
    background-color: lightgrey
    padding: 1em
    border-radius: 1em

  p
    max-width: 25em


/////////////////////////////////////////
// Showing the info
/////////////////////////////////////////

// Showing the breakpoints.
#info-1:after
  content: "$slicer-breakpoints: #{$slicer-breakpoints}"

// Showing the number of slices.
#info-2:after
  // Cycling through slices.
  @for $i from 1 through total-slices()
    // Setting a media query.
    +at($i)
      content: "This window currently fits #{$i} slices."$slicer-breakpoint-names